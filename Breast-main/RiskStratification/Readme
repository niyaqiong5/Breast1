Multi-Instance Learning (MIL) Breast Cancer Risk Prediction Models
This repository contains two advanced Multi-Instance Learning models for breast cancer risk prediction using BI-RADS classifications and medical imaging data.
🎯 Overview
The project implements two complementary MIL approaches:

Enhanced MIL Model (enhanced_mil_model.py) - Individual breast training with real ROC/PR curves
Bilateral MIL Model (bilateral_mil_english.py) - Combined bilateral training with asymmetry analysis

Both models use attention mechanisms to focus on the most relevant image slices and combine imaging features with clinical data for comprehensive risk assessment.
📋 Models Description
Enhanced MIL Model

Architecture: Individual breast bags (left/right trained separately)
Max Instances: 10 slices per bag
Key Features:

Real ROC/PR curve generation using cached predictions
Patient-aware data splitting to prevent leakage
Comprehensive overfitting detection
Multi-criteria model selection
Enhanced data augmentation for minority class



Bilateral MIL Model

Architecture: Combined bilateral training (left + right breast together)
Max Instances: 20 slices per bag (combined)
Key Features:

BI-RADS asymmetry feature engineering
Bilateral attention mechanism
Integrated left-right breast analysis
Performance validation and deep analysis



🏗️ Architecture
Core Components
Input Layer:
├── Bag Input: (batch_size, max_instances, 128, 128, 3)
├── Instance Mask: (batch_size, max_instances)
└── Clinical Input: (batch_size, 8)

Instance Encoder (MobileNetV2):
├── Base Model: MobileNetV2 (α=0.5, weights='imagenet')
├── Global Average Pooling
├── Dense(128, ReLU) → BatchNorm → Dropout(0.3)
└── Output: 128-dimensional features per instance

Attention Mechanism:
├── Attention Layer (dim=64)
├── Learns importance weights for each instance
└── Weighted aggregation of instance features

Clinical Feature Processing:
├── Dense(32) → BatchNorm → LeakyReLU → Dropout(0.3)
└── Dense(16) → BatchNorm → LeakyReLU

Feature Fusion:
├── Concatenate image and clinical features
├── Dense(64) → BatchNorm → LeakyReLU → Dropout(0.4)
└── Dense(32) → BatchNorm → LeakyReLU → Dropout(0.3)

Output Layer:
└── Dense(2, Softmax) → Risk Prediction (Medium/High)
📊 Data Requirements
Cache Structure
The models expect pre-processed data in the following cache format:
cache/
└── optimized_cache/
    ├── breast_data_v1_clinical.pkl.gz    # Clinical features
    ├── breast_data_v1_images.h5          # Image data
    └── breast_data_v1_mapping.pkl.gz     # Mapping information
Clinical Features

Age: Patient age
BMI: Body Mass Index
Density: Breast density (numeric)
Family History: Family history indicator
Age Group: Derived age grouping
BMI Category: BMI classification
Age×Density: Interaction feature
BI-RADS Asymmetry: Bilateral asymmetry score (Bilateral model only)

Image Data

Format: HDF5 with patient groups
Structure:
patient_id/
├── left_images: (n_slices, 128, 128, 3)
└── right_images: (n_slices, 128, 128, 3)

Preprocessing: Normalized to [0, 1] range

📈 Model Training Process
Enhanced MIL Pipeline

Data Loading: Load from cache with patient-aware splitting
Model Training: Train 3 ensemble models:

balanced: Balanced class weights
high_risk_focus: Emphasizes high-risk detection
conservative: Conservative approach


Prediction Caching: Store predictions for real ROC/PR curves
Model Selection: Choose best model based on test set performance
Visualization: Generate comprehensive plots and analysis

Bilateral MIL Pipeline

Bilateral Data Preparation: Combine left/right breast data
Asymmetry Feature Engineering: Calculate BI-RADS asymmetry
Ensemble Training: Train bilateral-specific models
Performance Validation: Deep analysis and robustness testing
Attention Analysis: Examine bilateral attention patterns

Performance Validation
The models include comprehensive validation through performance_validation.py:
Validation Components

Data Leakage Detection: Ensures no patient overlap between sets
Bootstrap Validation: Statistical confidence estimation
Prediction Confidence Analysis: Model certainty assessment
Robustness Testing: Noise resistance evaluation
Feature Quality Analysis: BI-RADS asymmetry impact
Attention Pattern Analysis: Attention mechanism effectiveness

🎯 Key Features
Enhanced MIL Model Highlights
✅ Real Performance Metrics: Actual ROC/PR curves from model predictions
✅ No Data Leakage: Patient-aware splitting prevents contamination
✅ Robust Evaluation: Multiple validation strategies
✅ Production Ready: Complete logging and error handling
✅ Interpretable: Attention weights show important slices
Bilateral MIL Model Highlights
✅ Bilateral Analysis: Considers both breasts simultaneously
✅ Asymmetry Detection: BI-RADS asymmetry as feature
✅ Comprehensive Validation: Deep performance analysis
✅ Attention Visualization: Bilateral attention patterns
✅ Clinical Integration: Enhanced clinical feature engineering
⚙️ Technical Requirements
Dependencies
tensorflow>=2.8.0
scikit-learn>=1.0.0
numpy>=1.21.0
pandas>=1.3.0
matplotlib>=3.5.0
seaborn>=0.11.0
h5py>=3.6.0
tqdm>=4.62.0
System Requirements

GPU: CUDA-compatible GPU recommended
RAM: 16GB+ recommended for large datasets
Storage: Sufficient space for cache files and results
